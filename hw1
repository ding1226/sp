#include <stdio.h>
#include <stdlib.h>

double* createMatrix(int rows, int cols) {
    return (double*)malloc(rows * cols * sizeof(double));
}

double* transposeMatrix(double* matrix, int rows, int cols) {
    double* transposed = createMatrix(cols, rows);
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            transposed[j * rows + i] = matrix[i * cols + j];
        }
    }
    return transposed;
}

double* addMatrices(double* matrix1, double* matrix2, int rows, int cols) {
    double* result = createMatrix(rows, cols);
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i * cols + j] = matrix1[i * cols + j] + matrix2[i * cols + j];
        }
    }
    return result;
}

double* multiplyMatrices(double* matrix1, double* matrix2, int rows1, int cols1, int cols2) {
    double* result = createMatrix(rows1, cols2);
    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            result[i * cols2 + j] = 0;
            for (int k = 0; k < cols1; k++) {
                result[i * cols2 + j] += matrix1[i * cols1 + k] * matrix2[k * cols2 + j];
            }
        }
    }
    return result;
}

void dumpMatrix(double* matrix, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%f ", matrix[i * cols + j]);
        }
        printf("\n");
    }
}

int main() {
    int rows = 3, cols = 3;

    double matrix1[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    double matrix2[] = {9, 8, 7, 6, 5, 4, 3, 2, 1};

    printf("Matrix 1:\n");
    dumpMatrix(matrix1, rows, cols);
    printf("Matrix 2:\n");
    dumpMatrix(matrix2, rows, cols);

    double* sum = addMatrices(matrix1, matrix2, rows, cols);
    printf("Sum of Matrix 1 and Matrix 2:\n");
    dumpMatrix(sum, rows, cols);
    free(sum);

    double* product = multiplyMatrices(matrix1, matrix2, rows, cols, cols);
    printf("Product of Matrix 1 and Matrix 2:\n");
    dumpMatrix(product, rows, cols);
    free(product);

    double* transposed = transposeMatrix(matrix1, rows, cols);
    printf("Transpose of Matrix 1:\n");
    dumpMatrix(transposed, cols, rows);
    free(transposed);

    return 0;
}
